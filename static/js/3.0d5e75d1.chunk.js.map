{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","to","id","className","classes","dialog","name","Message","message","TextMessageArea","SignupSchema","Yup","shape","textMessage","min","max","required","initialValues","onSubmit","values","setSubmitting","console","log","addUserMessage","validationSchema","isSubmitting","errors","touched","styles","dialogs","type","disabled","invalid","component","placeholder","errorBox","Dialogs","dialogsArray","messagesPage","map","user","messagesArray","messages","isAuth","dialogsItems","compose","connect","state","auth","dispatch","text","messageActionCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,kFCYpMC,EAPI,SAACC,GACnB,OACC,cAAC,IAAD,CAASC,GAAE,mBAAcD,EAAME,IAAMC,UAAWC,IAAQC,OAAxD,SAAiEL,EAAMM,QCE1DC,EANC,SAACP,GACb,OACI,qBAAKG,UAAWC,IAAQI,QAAxB,SAAkCR,EAAMQ,W,gCCoC1CC,EAAkB,SAACT,GAErB,IAMMU,EAAeC,MAAaC,MAAM,CACpCC,YAAaF,MACZG,IAAI,EAAG,cACPC,IAAI,IAAK,aACTC,SAAS,cAEd,OACI,cAAC,IAAD,CACIC,cAAe,CAAC,YAAe,IAC/BC,SAfS,SAACC,EAAD,GAA8B,IAApBC,EAAmB,EAAnBA,cACvBC,QAAQC,IAAIH,GACZnB,EAAMuB,eAAeJ,EAAON,aAC5BO,GAAc,IAaVI,iBAAkBd,EAHtB,SAKA,gBAAGe,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,QAAzB,OACC,eAAC,IAAD,CAAOxB,UAAWyB,IAAOC,QAASvB,KAAK,cAAvC,UAEE,wBAAQwB,KAAK,SAASC,SAAUN,EAAhC,oBAIC,cAAC,IAAD,CAAOtB,UAAWuB,EAAOb,aAAec,EAAQd,YAAce,IAAOI,QAAU,KAAMC,UAAU,WAAW3B,KAAK,cAAc4B,YAAY,aACvIR,EAAOb,aAAec,EAAQd,YAC5B,qBAAKV,UAAWyB,IAAOO,SAAvB,SAAkCT,EAAOb,cACzC,YASDuB,EAvEC,SAACpC,GAEb,IAAIqC,EAAerC,EAAMsC,aAAaT,QAAQU,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAYlC,KAAMkC,EAAKlC,KAAMJ,GAAIsC,EAAKtC,QAC5FuC,EAAgBzC,EAAMsC,aAAaI,SAASH,KAAI,SAAA/B,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,aAQzF,OAAqB,IAAjBR,EAAM2C,OACC,cAAC,IAAD,CAAU1C,GAAG,WAIpB,gCACH,sBAAKE,UAAWyB,IAAOC,QAAvB,UACI,qBAAK1B,UAAWyB,IAAOgB,aAAvB,SACIP,IAEJ,qBAAKlC,UAAWyB,IAAOc,SAAvB,SACID,OAIP,cAAC,EAAD,CAAiBlB,eAAgBvB,EAAMuB,qB,iCCL9BsB,sBACXC,aAjBoB,SAACC,GACtB,MAAO,CACNT,aAAcS,EAAMT,aACpBK,OAAQI,EAAMC,KAAKL,WAII,SAACM,GACzB,MAAO,CACN1B,eAAgB,SAAC2B,GACbD,EAASE,YAAqBD,SAMvBL,CACmCT","file":"static/js/3.0d5e75d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"errorBox\":\"Dialogs_errorBox__2bQSY\",\"invalid\":\"Dialogs_invalid__1bD92\"};","import React from 'react';\nimport classes from './../Dialogs.module.css';\nimport {NavLink} from 'react-router-dom';\n\n\n\nconst DialogItem = (props) => {\n\treturn (\n\t\t<NavLink to={`/dialogs/${props.id}`} className={classes.dialog}>{props.name}</NavLink>\n\t\t);\n}\n\n\nexport default DialogItem","import React from 'react';\nimport classes from './../Dialogs.module.css';\n\n\nconst Message = (props) => {\n    return (\n        <div className={classes.message}>{props.message}</div>\n        );\n}\n\nexport default Message","import React from 'react';\nimport styles from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem.jsx';\nimport Message from './Message/Message.jsx';\nimport {messageActionCreator, updateMessageActionCreator} from './../../redux/dialogs-reducer copy.js';\nimport {Redirect} from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage, useFormikContext } from 'formik';\nimport * as Yup from 'yup';\n\n\nconst Dialogs = (props) => {\n\n    let dialogsArray = props.messagesPage.dialogs.map(user => <DialogItem name={user.name} id={user.id}/>);\n    let messagesArray = props.messagesPage.messages.map(message => <Message message={message.message} />);\n\n    let textArea = React.createRef();\n\n    const addUserMessage = () => { \n        props.addUserMessage();\n    }\n\n    if (props.isAuth === false) {\n        return <Redirect to=\"/login\"/>\n    } \n    \n\treturn (\n        <div>\n    \t<div className={styles.dialogs}>\n         <div className={styles.dialogsItems}>\n            {dialogsArray}         \t\n         </div>\n         <div className={styles.messages}>\n            {messagesArray}\n         </div>\n         \n     </div>\n      <TextMessageArea addUserMessage={props.addUserMessage}/>\n      </div>\n\t\t);\n}\n\n\nconst TextMessageArea = (props) => {\n\n    const onSubmit = (values, {setSubmitting}) => {\n        console.log(values);\n        props.addUserMessage(values.textMessage)\n        setSubmitting(false);\n    }\n\n    const SignupSchema = Yup.object().shape({\n        textMessage: Yup.string()\n        .min(2, 'Too Short!')\n        .max(100, 'Too Long!')\n        .required('Required')\n    });\n    return(\n        <Formik\n            initialValues={{'textMessage': ''}}\n            onSubmit={onSubmit}\n            validationSchema={SignupSchema}>\n\n       {({ isSubmitting, errors, touched }) => (\n         <Form  className={styles.dialogs} name=\"dialogsForm\">\n\n           <button type=\"submit\" disabled={isSubmitting}>\n             Submit\n           </button>\n\n            <Field className={errors.textMessage && touched.textMessage ? styles.invalid : null} component=\"textarea\" name=\"textMessage\" placeholder=\"textarea\"/>\n            {(errors.textMessage && touched.textMessage) \n              ? <div className={styles.errorBox}>{errors.textMessage}</div>\n              : null}\n         </Form>\n       )}\n            \n\n        </Formik>\n        )\n}\n\nexport default Dialogs","import React from 'react';\nimport classes from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem.jsx';\nimport Message from './Message/Message.jsx';\nimport Dialogs from './Dialogs.jsx';\nimport StoreContext from './../../storeContext.js';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {messageActionCreator} from './../../redux/dialogs-reducer copy.js';\nimport {WithAuthRedirect} from './../../hoc/WithAuthRedirect.js';\nimport {compose} from 'redux';\n\n\n\n\nconst mapStateToProps = (state) => {\n   return {\n    messagesPage: state.messagesPage,\n    isAuth: state.auth.isAuth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n   return {\n    addUserMessage: (text) => {\n        dispatch(messageActionCreator(text));\n    }\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps))(Dialogs);"],"sourceRoot":""}